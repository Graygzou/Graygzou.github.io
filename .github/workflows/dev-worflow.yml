# This is a basic workflow to help you get started with Actions

# Controls when the action will run. Triggers the workflow on push or pull request
# A workflow run is made up of one or more jobs that can run sequentially or in parallel
# Steps represent a sequence of tasks that will be executed as part of the job

name: develop CI workflow

# Specify the controls here
on:
  push:
    branches: [ develop ]
  pull_request:
    branches: [ develop ]

# Specify the workflow here
jobs:
  # =============================
  setup:
    name: Setup in order to run jekyll commands
    runs-on: ubuntu-16.04
    defaults:
      run:
        shell: bash
        working-directory: ./jekyll
    steps:
      - name: Github checkout
        uses: actions/checkout@v2   # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it

      # Cache dependencies: will attempt to restore a cache based on the key you provide.
      # shorten build times and decrease load on servers.
      # see https://github.com/actions/cache/blob/main/examples.md#ruby---bundler
      - name: Github cache
        uses: actions/cache@v2
        with:
          path: vendor/bundle
          key: ${{ runner.os }}-gems-${{ hashFiles('**  /Gemfile.lock') }}
          restore-keys: |
            ${{ runner.os }}-gems-

      - name: Github Set up Ruby 2.6
        uses: actions/setup-ruby@v1
        with:
          ruby-version: 2.6.x

      # Make sure path match the one declared in actions/cache
      - name: Install Bundler
        uses: ./.github/actions/install
        with:
          bundle_path: vendor/bundle

      - name: Check files changed
        run: git log --name-only -n 1 ${{ github.sha }} --pretty=format:%b > last-commit.txt;
        if: ${{ github.event_name }} != "pull_request"

      - name: Upload file changed output
        uses: actions/upload-artifact@v1
        with:
          name: output-txt-file
          path: last-commit.txt

  # =============================
  page-generation:
    name: markdown-generation
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-16.04]
        python-version: [3.7, 3.8, pypy3]
    needs: setup
    steps:
      - name: Github checkout
        uses: actions/checkout@v2

      - uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Display Python version
        run: python -c "import sys; print(sys.version)"

      - name: install-dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: generate-markdown
        run: python ./.github/scripts/generation/githubProjectGen.py ${{ secrets.GENERATION_TOKEN }}

      - name: check-contains-svg-asset
        uses: ./.github/actions/filechanged
        with:
          file-extension: ${{ '*\.svg$' }}

      - name: svg-creation
        run: python ./.github/scripts/generation/mainSvgGen.py
        if: ${{ steps.check-contains-svg-asset.outputs.contains-file != '' }}

  # =============================
  preprocess:
    name: Resize images
    runs-on: ubuntu-16.04
    needs: setup
    defaults:
      run:
        shell: bash
    steps:
      - name: Github checkout
        uses: actions/checkout@v2

      - name: check-contains-jpg-asset
        uses: ./.github/actions/filechanged
        with:
          file-extension: ${{ '*\.jpg$' }}

      - name: check-contains-png-asset
        uses: ./.github/actions/filechanged
        with:
          file-extension: ${{ '*\.png$' }}

      - name: create-webp-images
        uses: ./.github/actions/resizeimg
        with:
          original-folder: "jekyll/assets/"
        if: ${{ steps.check-contains-jpg-asset.outputs.contains-file != '' || steps.check-contains-png-asset.outputs.contains-file != '' }}

  # =============================
  webpgen:
    name: Webp images creation
    runs-on: ubuntu-16.04
    needs: setup
    defaults:
      run:
        shell: bash
    steps:
      - name: Github checkout
        uses: actions/checkout@v2

      - name: check-contains-jpg-asset
        uses: ./.github/actions/filechanged
        with:
          file-extension: ${{ '*\.jpg$' }}

      - name: check-contains-png-asset
        uses: ./.github/actions/filechanged
        with:
          file-extension: ${{ '*\.png$' }}

      - name: debug
        run: |
          echo "${{ steps.check-contains-jpg-asset.outputs.contains-file != '' }}"
          echo "${{ steps.check-contains-png-asset.outputs.contains-file != '' }}"
        shell: bash

      - name: create-webp-images
        uses: ./.github/actions/webp
        with:
          target-folder: "jekyll/assets/webp"
        if: ${{ steps.check-contains-jpg-asset.outputs.contains-file != '' || steps.check-contains-png-asset.outputs.contains-file != '' }}

      - name: test
        run: echo "${{ steps.create-webp-images.outputs.webp-folder }}"

      - name: Upload webp folders through artifacts
        uses: actions/upload-artifact@v1
        with:
          name: webp-images
          path: jekyll/assets/webp/
        if: ${{ steps.create-webp-images.outputs.webp-folder }}

      # Should ALWAYS be the last step.
      - name: teleconsole-launch
        if: ${{ failure() }}
        run: echo "Should launch teleconsole and wait for it to be over."

  # =============================
  build:
    name: Build
    runs-on: ubuntu-16.04
    needs: setup
    defaults:
      run:
        shell: bash
    steps:
      - name: Github Set up Ruby 2.6
        uses: actions/setup-ruby@v1
        with:
          ruby-version: 2.6.x

      - name: Github checkout
        uses: actions/checkout@v2

      - name: jekyll-production-build
        uses: ./.github/actions/jekyll-build
        with:
          bundle-path: vendor/bundle
          project-folder: ./jekyll
          environment: production
          destination-relative-folder: site

      - name: html-proofer
        uses: ./.github/actions/html-proofer
        with:
          bundle-path: vendor/bundle
          bundle-folder: ./jekyll
          html-relative-folder: site
          url-ignore: "https://www.linkedin.com/in/gregoire-boiron/,https://www.latecoere.aero/en/"
